# Encoding: UTF-8

module DocMyRoutes
  # Base class to parse examples
  #
  # Examples are expected to be in YAML format, see README.md for details
  class ExamplesHandler
    class << self
      # Load json examples generated by tests
      def routes_examples
        @routes_examples ||= begin
          examples = {}

          DocMyRoutes.config.examples.each do |example_file|
            data = parse_example(example_file)
            (examples[data['name']] ||= []) << data
          end

          examples
        end
      end

      def parse_example(example_file)
        data = YAML.load_file(example_file)

        # Validate that mandatory parameters are present
        fail_unless_present(%w(name description request response action),
                            data)

        {
          'name' => data['name'],
          'description' => data['description'],
          'request' => parse_request(data),
          'response' => parse_response(data)
        }
      end

      private

      def fail_unless_present(*fields, data)
        fields.flatten.each do |field|
          fail "An example doesn't have the required field #{field}: #{data}" \
            unless data[field]
        end
      end

      def parse_request(data)
        request = {}

        request['query'] = "#{data['action']}"
        request['query'] += "?#{data['request']['params']}" \
                                unless data['request']['params'].empty?

        request['headers'] = data['request']['headers'] \
                                unless data['request']['headers'].empty?
        request['body'] = data['request']['body'] \
                                if data['request']['body']
        request
      end

      def parse_response(data)
        data_response = data['response']
        fail_unless_present(%w(headers status), data_response)

        response = {}
        response['body'] = data_response['body'] \
                                unless data_response['body'].empty?
        response['headers'] = data_response['headers']
        response['status'] = data_response['status']
        response
      end
    end
  end
end
